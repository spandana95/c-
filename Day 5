1. Writing a program using "ENUM" 
Sol:
#include<stdio.h>
enum state {a=2, b=5, c};
enum state d=7;

enum state find()
{
return d;
}

int main()
{
clrscr();
(find() ==(a+b))? printf("true"):printf("false");
return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------
2. Program using array of strings.
Sol:
void main()
{
char color[4][10] = { "Black","Pink","Yellow","Green"};
int i=0;
clrscr();
for (i=0;i<4;i++)
printf("%s\n",color[i]);
}
----------------------------------------------------------------------------------------------------------------------------------------
3. Using Recursion
Sol:
#include<stdio.h>

int main()
{
int x=0,i;
clrscr();
scanf("%d",&i);
x=factorial(i);
printf("\nFactorial of %d is %d",i,x);
return 0;
}

int factorial(int j)
{
  if ( j < 0 )
      return -1;
  if ( j == 0 )
     return 1;
  return (j * factorial(j-1));
}
----------------------------------------------------------------------------------------------------------------------------------------
4. Using "conio" function
Sol:
#include<stdio.h>
#include<conio.h>

void main()
{
clrscr();
printf("Hello World\n");
getch();
}
----------------------------------------------------------------------------------------------------------------------------------------
5. Struct type function
Sol:
#include<stdio.h>
#include<string.h>

struct books
{
char title[50];
char subj[50];
int id;
};

int main()
{
struct books b1;
struct books b2;
clrscr();
strcpy(b1.title,"Zahir");
strcpy(b1.subj,"Novel");
b1.id = 1122;

strcpy(b2.title,"Mainframes");
strcpy(b2.subj,"Programming");
b2.id = 6709;

printf(" Book 1 details :\n%s\n%s\n%d",b1.title,b1.subj,b1.id);
printf("\nBook 2 details :\n%s\n%s\n%d",b2.title,b2.subj,b2.id);
return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------
6. To find minimum value
Sol:
#include<stdio.h>

int main()
{
int min=0;
int num[] = { 9, 18, 7, 56, 76, 1};
clrscr();
min=mina(num,6);
printf("Minimum number = %d\n",min);
return 0;
}

int mina(int arr[], int k)
{
int min=arr[0];
int i=0;
for(i=1;i<k;i++)
{
if( min > arr[i] )
min=arr[i];
}
return min;
}
----------------------------------------------------------------------------------------------------------------------------------------
7. Using argc and argv 
Sol:
#include<stdio.h>
#include<conio.h>

int main(int argc, char *argv[])
{
int i;
clrscr();
   if ( argc >=2)
   {
      printf("Entered values are:\n");
      for(i=0;i < argc;i++ )
      printf("%s\n",argv[i]);
   }
   else
      printf("Argument list is empty");
  return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------
8. Using enum and printing the values
Sol:
#include<stdio.h>

enum day {sun=1,mon,tues=6,wed,thur,fri=11,sat};

int main()
{
clrscr();
printf("%d %d %d %d %d %d %d",sun,mon,tues,wed,thur,fri,sat);
return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------
9. 
